# Guia de Uso do UFW (Uncomplicated Firewall)

## üìÑ Resumo

O **UFW** √© uma ferramenta simplificada para gerenciar o firewall no servidor.  
Ele serve como uma interface amig√°vel para o **iptables** ou **nftables**, permitindo configurar regras de forma simples sem precisar lidar com comandos complexos de firewall do kernel.  

Com o UFW, √© poss√≠vel:

- Permitir ou negar acesso a portas e servi√ßos.
- Criar regras por IP ou rede.
- Ativar logs de conex√£o.
- Garantir a seguran√ßa b√°sica do servidor de forma r√°pida.

---

## üíª Instala√ß√£o

No Ubuntu, o UFW geralmente j√° vem instalado. Para garantir ou instalar manualmente:

```bash
sudo apt update
sudo apt install ufw -y
```
# **‚ö†Ô∏è Aten√ß√£o, antes de habilitar o UFW se estiver remoto via SSSH‚ö†Ô∏è**
> ‚ö†Ô∏èOBSERVA√á√ÉO IMPORTANTE: CUIDADO QUANDO VOC√ä HABILITAR O UFW UTILIZANDO UMA CONEX√ÉO REMOTA, AP√ìS DIGITAR O COMANDO: sudo ufw enable A SEGUINTE MENSAGEM √â MOSTRADA: Command may disrupt existing ssh connections (O comando pode interromper as conex√µes ssh existentes), EM ALGUNS CEN√ÅRIOS PODE ACONTECER A QUEDA (DESCONECTAR) DA CONEX√ÉO E VOC√ä N√ÉO CONSEGUIR MAIS ACESSAR O SERVIDOR REMOTAMENTE.

Habilitando e iniciando o Firewall UFW
```bash
sudo ufw enable
```
Verifique o status do UFW:
```bash
sudo ufw status verbose
```

Verificando o servi√ßo do UFW
```bash
sudo systemctl status ufw
sudo systemctl restart ufw
sudo systemctl stop ufw
sudo systemctl start ufw
```
Analisando os Log's e mensagens de erro do UFW
```bash
# op√ß√£o do comando journalctl: x (catalog), e (pager-end), u (unit)
sudo journalctl -xeu ufw
```
---

# Minhas Regras Padr√£o 

```bash 

sudo apt update

sudo apt install ufw -y

sudo ufw enable

sudo systemctl start ufw

sudo systemctl status ufw

sudo ufw default deny incoming

sudo ufw default deny outgoing




#Liberando a Entrada (IN) Loopback (LO)
sudo ufw allow in on lo

#Liberando  a Sa√≠da  (ON) Loopback (LO)
sudo ufw allow out on lo

#Regra de libera√ß√£o (ALLOW) de Sa√≠da (OUT) do Protocolo NTP (123/udp)
sudo ufw allow out 123/udp comment 'Liberando a saida para sincronismo do NTP'

#Regra de libera√ß√£o de Entrada Limitada com Registro de Log do Protocolo SSH (2222/tcp)
sudo ufw limit in log-all 2222/tcp comment 'Liberando a entrada do acesso remoto via SSH'

# libera√ß√£o de Sa√≠da da Consulta do Protocolo DNS 
sudo ufw allow out 53/udp comment 'Liberando a saida para consulta do DNS'

#libera√ß√£o de Sa√≠da (OUT) do Protocolo HTTP (80/tcp)
sudo ufw allow out 80/tcp comment 'Liberando a saida para navega√ß√£o do HTTP'

#libera√ß√£o (ALLOW) de Sa√≠da do Protocolo HTTPS (443/tcp)
sudo ufw allow out 443/tcp comment 'Liberando a saida para navega√ß√£o do HTTPS'
_______________________________


#Habilitando os Logs das Regras do UFW
sudo ufw logging on

#Configurando o N√≠vel de Log para M√©dio (MEDIUM)
sudo ufw logging medium

#editando o arquivo de configura√ß√£o do TCPWrappers Hosts.Deny
sudo vim /etc/hosts.deny

    # alterar as informa√ß√µes na linha 17
    ALL: ALL: spawn /bin/echo "$(date) | Servi√ßo Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/hosts-deny.log


#editando o arquivo de configura√ß√£o do TCPWrappers Hosts.Allow
sudo vim /etc/hosts.allow

    # alterar as informa√ß√µes na linha 17
    sshd: <IP ORIGEM>, <OUTRO IP ORIGEM> : spawn /bin/echo "$(date) | Servi√ßo Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/hosts-allow.log

_______________________________

# OUTROS 

#Liberando (ALLOW) o IPv4 172.16.1.114 (FROM) acessar o servidor (TO) do Webmin na porta (PORT) 10000 via protocolo HTTPS (proto tcp)
sudo ufw allow from <IP ORIGEN> to <IP SERVIDOR> port 10000 proto tcp comment 'Liberando somente o IP para acessar o Webmin'

```
______________________________


# Utilizando o comando LNAV (Logfile Navigator) no Ubuntu Server
Util pra lod do docker 

Documenta√ß√£o Oficial do Logfile Navigator: https://docs.lnav.org/en/latest/index.html
```bash
#Principais teclas de atalho do comando lnav
A) Ctrl-u ou Ctrl-d: Role para cima e para baixo uma p√°gina de cada vez.
B) g (min√∫sculo): V√° para o in√≠cio do arquivo de log.
C) G (mai√∫sculo): V√° para o final do arquivo de log.
D) q (min√∫sculo): Sair do Logfile Navigator (Quit).
E) e (min√∫sculo) ou E (mai√∫sculo): Encontrando erros nos arquivos.
```

```bash

#verificando os Log's de acesso remoto do servidor Ubuntu com o comando lnav
sudo lnav /var/log/auth.log
sudo lnav /var/log/syslog
sudo lnav /var/log/hosts-deny.log
sudo lnav /var/log/hosts-allow.log
sudo lnav /var/log/ufw.log
```
___________________________________________________________________________


# üîπ Entendendo as Regras 

O UFW funciona com **regras de permiss√£o ou nega√ß√£o** para servi√ßos, portas ou IPs:

* `allow` ‚Üí Permite acesso.
* `deny` ‚Üí Bloqueia acesso. (n√£o informa nada ao host apenas bloqueia)
* `reject` ‚Üí Rejeita acesso (mas informa o host que foi rejeitado).
* `limit` ‚Üí Permite acesso com prote√ß√£o contra ataques de for√ßa bruta.
* `disable` ‚Üí Desabilita

Exemplos:

```bash
sudo ufw allow 22          # Permite SSH
sudo ufw deny 21           # Bloqueia FTP
sudo ufw allow 80/tcp      # Permite HTTP
sudo ufw limit 22/tcp      # Limita tentativas SSH
sudo ufw allow from <IP DA MAQUINA>  # Permite acesso de um IP espec√≠fico
```




---

## Para listar regras atuais:

```bash
sudo ufw status numbered
```

Para remover uma regra espec√≠fica:

```bash
sudo ufw delete [N√öMERO_DA_REGRA]
```

---

## ‚öôÔ∏è Como Aplicar Regras

1. **Ativar o UFW**:

```bash
sudo ufw enable
```

2. **Desativar o UFW (se necess√°rio)**:

```bash
sudo ufw disable
```

3. **Resetar para o estado padr√£o**:

```bash
sudo ufw reset
```

4. **Habilitar logs** (√∫til para monitorar acessos):

```bash
sudo ufw logging on
```

Diret√≥rios padr√£o do UFW

```bash
/etc/default/ufw   <-- Arquivo de inicializa√ß√£o padr√£o do UFW
/etc/ufw/*         <-- Diret√≥rio padr√£o das configura√ß√µes das regras do UFW
/var/log/ufw.log   <-- Arquivo de Log padr√£o do UFW
/var/log/syslog    <-- Logs do UFW no sistema (usar o filtro: cat /var/log/syslog | grep -i ufw)
/var/log/kern.log  <-- Logs do UFW no Kernel (usar o filtro: cat /var/log/syslog | grep -i ufw)
```

---

## üõ°Ô∏è Melhores Pr√°ticas

1. **Permitir somente servi√ßos essenciais**:

* SSH (`22`) para acesso remoto
* HTTP (`80`) e HTTPS (`443`) se houver web server

2. **Bloquear tudo por padr√£o**:

```bash
sudo ufw default deny incoming
sudo ufw default allow outgoing
```

3. **Usar `limit` para servi√ßos sens√≠veis** (como SSH):

```bash
sudo ufw limit 22/tcp
```

4. **Restringir acesso por IP quando poss√≠vel**:

```bash
sudo ufw allow from <IP DO HOST> to any port 22
```

5. **Verificar regras e logs periodicamente**:

```bash
sudo ufw status verbose
sudo ufw show added
sudo tail -f /var/log/ufw.log
```

6. **Integrar com Docker ou outros servi√ßos com aten√ß√£o**:

* O Docker pode adicionar regras diretamente ao iptables.
* Para servidores com containers, verifique se as portas expostas est√£o corretamente liberadas no UFW.

---

> ‚ö†Ô∏è Lembre-se: Sempre teste as regras antes de aplicar em produ√ß√£o, para evitar perder acesso SSH ao servidor.

# Configurando o N√≠vel de Log (LOGGING) do UFW no Ubuntu Server

> OBSERVA√á√ÉO IMPORTANTE: no UFW temos basicamente 05 (cinco) n√≠veis de Log: off (desligado), low (baixo), medium (m√©dio), high (alto) e full (completo/debug).

o que muda √© as informa√ß√µes que ser√£o registradas, ent√£o temos que pensar a nivel de armazenamento o tanto de logs que queremos registrar 

Recomendado √© `MEDUM`

```bash
#Habilitando os Logs das Regras do UFW
sudo ufw logging on
  Logging enabled

#Configurando o N√≠vel de Log de Baixo (LOW) para M√©dio (MEDIUM)
sudo ufw logging medium
  Logging enabled

#Verificando as Regras Detalhadas padr√£o do UFW
sudo ufw status verbose
```
# Liberando (ALLOW) a Entrada (INCOMING) e Sa√≠da (OUTGOING) da Interface de Loopback do UFW no Ubuntu Server

> OBSERVA√á√ÉO IMPORTANTE: por padr√£o, o UFW no Ubuntu Server adiciona automaticamente regras de IPv6 para regras da Interface de Loopback.

```bash
#Liberando (ALLOW) a Entrada (IN) da Interface (ON) Loopback (LO)
sudo ufw allow in on lo

#Liberando (ALLOW) a Sa√≠da (OUT) da Interface (ON) Loopback (LO)
sudo ufw allow out on lo

#Verificando as Regras Detalhadas padr√£o do UFW
sudo ufw status verbose

#Verificando o Status das Regras (RULES) Numeradas (NUMBERED) do UFW
sudo ufw status numbered
```
# Liberando (ALLOW) as Sa√≠das (OUTGOING) B√°sicas do UFW no Ubuntu Server
>‚ö†Ô∏è OBSERVA√á√ÉO IMPORTANTE: por padr√£o, o UFW no Ubuntu Server adiciona automaticamente regras de IPv6 para regras criadas de forma simples ou b√°sica.

>‚ö†Ô∏è OBSERVA√á√ÉO IMPORTANTE: quando voc√™ utilizar a op√ß√£o: comment (coment√°rio) do UFW √© recomendo n√£o utilizar acentua√ß√£o e sempre dentro de Aspas Simples (n√£o crase).

>‚ö†Ô∏è OBSERVA√á√ÉO IMPORTANTE: muito cuidado na hora de configurar a Sequ√™ncia de Regras do UFW, ele segue o padr√£o de: Primeira Regra Correspondente (de cima para baixo), A√ß√£o da Regra (allow, deny, reject), Regras Subsequentes (continua se n√£o encontrar uma regra) e Regra Padr√£o (default).

>‚ö†Ô∏è OBSERVA√á√ÉO IMPORTANTE: o UFW tamb√©m processa as regas da seguinte forma: Regras de Porta Espec√≠fica (maior prioridade), Regras de Protocolo e Porta (alta prioridade), Regras de Aplica√ß√£o de Servi√ßo (prioridade intermediaria), Regras de Subnet (menor prioridade), Regras de Interface (menor prioridade) e Regras de App Profile (essa regra tem menor prioridade e sempre fica por √∫ltimo).

```bash

#Regra de libera√ß√£o (ALLOW) de Sa√≠da (OUT) da Consulta do Protocolo DNS (53/udp)
sudo ufw allow out 53/udp comment 'Liberando a saida para consulta do DNS'

#Regra de libera√ß√£o (ALLOW) de Sa√≠da (OUT) da Navega√ß√£o do Protocolo HTTP (80/tcp)
sudo ufw allow out 80/tcp comment 'Liberando a saida para navega√ß√£o do HTTP'

#Regra de libera√ß√£o (ALLOW) de Sa√≠da (OUT) da Navega√ß√£o do Protocolo HTTPS (443/tcp)
sudo ufw allow out 443/tcp comment 'Liberando a saida para navega√ß√£o do HTTPS'

#Regra de libera√ß√£o (ALLOW) de Sa√≠da (OUT) do Protocolo NTP (123/udp)
sudo ufw allow out 123/udp comment 'Liberando a saida para sincronismo do NTP'

#Verificando as Regras Detalhadas padr√£o do UFW
sudo ufw status verbose

#Verificando as Regras Detalhadas padr√£o do UFW em modo Numerado
sudo ufw status numbered

#Resolvendo o nome DNS do Google
nslookup google.com

#Pingando o nome DNS do Google
ping google.com

#Atualizando as Listas do Sources.List do Apt
sudo apt update

```

# Liberando (ALLOW) as Entradas (INCOMING) B√°sicas do UFW no Ubuntu Server
> ‚ö†Ô∏è OBSERVA√á√ÉO IMPORTANTE: por padr√£o, o UFW no Ubuntu Server adiciona automaticamente regras de IPv6 para regras criadas de forma simples ou b√°sica.

> ‚ö†Ô∏è OBSERVA√á√ÉO IMPORTANTE: quando voc√™ utilizar a op√ß√£o: comment (coment√°rio) do UFW √© recomendo n√£o utilizar acentua√ß√£o e sempre dentro de Aspas Simples (n√£o crase).

> ‚ö†Ô∏è OBSERVA√á√ÉO IMPORTANTE: mesmo quando voc√™ habilita os recursos de Log do UFW, nem todos os Logs s√£o registrado no arquivo: /var/log/ufw.log, para resolver esse problema voc√™ pode adicionar as op√ß√µes: log (LOGAR) ou log-all (LOGAR TUDO) nas regras de firewall.

```bash
#Regra de libera√ß√£o (ALLOW) de Entrada (IN) Logando Tudo (LOG-ALL) do Protocolo SSH (22/tcp)
sudo ufw allow in log-all 22/tcp comment 'Liberando a entrada do acesso remoto via SSH'

#Regra de libera√ß√£o (ALLOW) de Entrada (IN) do Protocolo HTTP (80/tcp)
sudo ufw allow in 80/tcp comment 'Liberando a entrada do protocolo HTTP'

#Verificando as Regras Detalhadas padr√£o do UFW
sudo ufw status verbose

#Verificando as Regras Detalhadas padr√£o do UFW em modo Numerado
sudo ufw status numbered

#Testando as portas de conex√µes remotas do SSH e HTTP via Telnet, Netcat ou NC
#op√ß√£o do comando netcat: -v (verbose)
#op√ß√£o do comando nc: -v (verbose)
telnet <IP DA MAQUINA> 22
telnet <IP DA MAQUINA> 80
netcat -v <IP DA MAQUINA> 22
netcat -v <IP DA MAQUINA> 80
    nc -v <IP DA MAQUINA> 22
    nc -v <IP DA MAQUINA> 80

#Acessando remotamente o Ubuntu Server via SSH
ssh <USUARIO>@<IP DO SERVIDOR>

#Testando o acesso via Navegador do Protocolo HTTP
firefox ou google chrome: http://endere√ßo_ipv4_ubuntuserver
15_ Liberando (ALLOW) as Entradas (INCOMING) por Sub-rede ou Endere√ßo IPv4 do UFW no Ubuntu Server

```
> ‚ö†Ô∏è OBSERVA√á√ÉO IMPORTANTE: por padr√£o, o UFW no Ubuntu Server "N√ÉO" adiciona automaticamente regras de IPv6 para as regras criadas de forma avan√ßada ou complexa

> ‚ö†Ô∏è OBSERVA√á√ÉO IMPORTANTE: quando voc√™ utilizar a op√ß√£o: comment (coment√°rio) do UFW √© recomendo n√£o utilizar acentua√ß√£o e sempre dentro de Aspas Simples (n√£o crase).

> ‚ö†Ô∏è OBSERVA√á√ÉO IMPORTANTE: nas op√ß√µes FROM (ORIGEM/DE) e TO (DESTINO/PARA) voc√™ pode usar a op√ß√£o ANY (QUALQUER) para configurar a regra de firewall menos restritiva, um exemplo seria do procolo HTTP na porta 80: sudo ufw allow from any to any port 80 proto tcp ou utilizar a Interface de entrada: sudo ufw allow in on enp3s0 to any port 80 proto tcp

```bash
#Liberando (ALLOW) a Sub-rede 172.16.1.0/24 (FROM) acessar o servidor (TO) do Grafana Server na porta (PORT) 3000 via protocolo HTTP (proto tcp)
sudo ufw allow from <IP DA REDE/24 ou SUBREDE/24 ou HOST> to <IP SERVIDOR> port 3000 proto tcp comment 'Liberando a Sub-Rede para acessar o Grafana Server'

#Liberando (ALLOW) o IPv4 172.16.1.114 (FROM) acessar o servidor (TO) do Webmin na porta (PORT) 10000 via protocolo HTTPS (proto tcp)
sudo ufw allow from <IP DA REDE/24 ou SUBREDE/24 ou HOST> to <IP SERVIDOR> port 10000 proto tcp comment 'Liberando somente o IP para acessar o Webmin'

#Verificando as Regras Detalhadas padr√£o do UFW
sudo ufw status verbose

#Verificando as Regras Detalhadas padr√£o do UFW em modo Numerado
sudo ufw status numbered

#Testando o acesso via Navegador dos protocolos HTTP e HTTPS
firefox ou google chrome: http://endere√ßo_ipv4_ubuntuserver:3000
firefox ou google chrome: https://endere√ßo_ipv4_ubuntuserver:10000

```

# AUDITORIA DE LOGS - Melhorando a Seguran√ßa e Logs Detalhados do TCPWrappers no Ubuntu Server

## editando o arquivo de configura√ß√£o do TCPWrappers Hosts.Deny

Aqui registra log daquilo que foi NEGADO (DENY) , ent√£o se toiver algo registrado no diretorio deve ser verificado imediatamente a tentativa de origem do log


`path: cd /etc/hosts.deny`

```bash
#editando o arquivo de configura√ß√£o do TCPWrappers Hosts.Deny
sudo vim /etc/hosts.deny

# alterar as informa√ß√µes na linha 17
ALL: ALL: spawn /bin/echo "$(date) | Servi√ßo Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/hosts-deny.log
```

## editando o arquivo de configura√ß√£o do TCPWrappers Hosts.Allow 

ir√° registrar os logs do que √© LIBERADO (ALLOW)

`path: cd /etc/hosts.allow`

Explica√ß√£o:
  - sshd: ‚Üí aplica para o servi√ßo SSH.
  - ALL: ‚Üí qualquer host remoto.
  - spawn /bin/echo ... >> /var/log/hosts-allow.log ‚Üí escreve cada tentativa de conex√£o no arquivo /var/log/hosts-allow.log.

```bash
#editando o arquivo de configura√ß√£o do TCPWrappers Hosts.Allow
sudo vim /etc/hosts.allow

# alterar as informa√ß√µes na linha 10
sshd: ALL: spawn /bin/echo "$(date) | Servi√ßo Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/hosts-allow.log

```
>  OBSERVA√á√ÉO: ALTERAR A REDE CONFORME A SUA NECESSIDADE


# Utilizando o comando LNAV (Logfile Navigator) no Ubuntu Server
Util pra lod do docker 

Documenta√ß√£o Oficial do Logfile Navigator: https://docs.lnav.org/en/latest/index.html

```bash
#Principais teclas de atalho do comando lnav
A) Ctrl-u ou Ctrl-d: Role para cima e para baixo uma p√°gina de cada vez.
B) g (min√∫sculo): V√° para o in√≠cio do arquivo de log.
C) G (mai√∫sculo): V√° para o final do arquivo de log.
D) q (min√∫sculo): Sair do Logfile Navigator (Quit).
E) e (min√∫sculo) ou E (mai√∫sculo): Encontrando erros nos arquivos.

#verificando os Log's de acesso remoto do servidor Ubuntu com o comando lnav
sudo lnav /var/log/auth.log
sudo lnav /var/log/syslog
sudo lnav /var/log/hosts-deny.log
sudo lnav /var/log/hosts-allow.log
sudo lnav /var/log/ufw.log